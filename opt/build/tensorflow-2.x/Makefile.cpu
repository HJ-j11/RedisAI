
ROOT=../../..

VERSION ?= 2.3.1
OSNICK ?= bionic

VARIANT=cpu

#----------------------------------------------------------------------------------------------

OS:=$(shell $(ROOT)/opt/readies/bin/platform --os)
# OSNICK:=$(shell $(ROOT)/opt/readies/bin/platform --osnick)
OSNICK ?= bionic
ARCH:=$(shell $(ROOT)/opt/readies/bin/platform --arch)
MACH:=$(shell uname -m)

DEVICE=cpu

DOCKER_OS.xenial=ubuntu:xenial
DOCKER_OS.bionic=ubuntu:bionic
DOCKER_OS.focal=ubuntu:focal
DOCKER_OS.stretch=debian:stretch-slim
DOCKER_OS.buster=debian:buster-slim
DOCKER_OS.centos7=centos:7.8.2003
DOCKER_OS=$(DOCKER_OS.$(OSNICK))

TAR_ARCH.x64=x86_64
TAR_ARCH.arm64v8=arm64
TAR_ARCH.arm32v7=arm

#----------------------------------------------------------------------------------------------

TF_VERSION=2.3.1

#----------------------------------------------------------------------------------------------

S3_URL=redismodules/tensorflow

STEM=libtensorflow

#----------------------------------------------------------------------------------------------

DOCKER_BUILD_ARGS += \
	TF_VER=$(VERSION) \
	OSNICK=$(OSNICK) \
	OS=$(DOCKER_OS) \
	ARCH=$(ARCH) \
	MACH=$(MACH)

define build_native # (1=arch, 2=tar-arch)
IID_$(1)=$(1)_$(VERSION).iid
CID_$(1)=$(1)_$(VERSION).cid

build_native:
	@docker build --iidfile $$(IID_$(1)) -t redisfab/$(STEM):$(VERSION)-$(DEVICE)-$(VARIANT)-$(1)-$(OSNICK) \
		-f Dockerfile.$(VARIANT) $(foreach A,$(DOCKER_BUILD_ARGS),--build-arg $(A)) .
	@docker create --cidfile $$(CID_$(1)) `cat $$(IID_$(1))`
	@docker cp `cat $$(CID_$(1))`:/build/dest/$(STEM)-$(DEVICE)-$(VARIANT)-$(OS)-$(2)-$(VERSION).tar.gz .

.PHONY: build_native
endef

#----------------------------------------------------------------------------------------------

define publish_native # (1=arch, 2=tar-arch)
publish_native:
	@aws s3 cp $(STEM)-$(DEVICE)-$(VARIANT)-$(OS)-$(2)-$(VERSION).tar.gz s3://$(S3_URL)/ --acl public-read

.PHONY: publish_native
endef

#----------------------------------------------------------------------------------------------

all: build

help:
	@echo "make [build|publish] OSNICK=nick "

.PHONY: all build publish help

#----------------------------------------------------------------------------------------------

build: build_native

$(eval $(call build_native,$(ARCH),$(TAR_ARCH.$(ARCH))))

#----------------------------------------------------------------------------------------------

ifneq ($(filter publish,$(MAKECMDGOALS)),)
ifeq ($(wildcard $(HOME)/.aws/credentials),)
$(error Please run 'aws configure' and provide it with access credentials)
endif
endif

publish: publish_native

$(eval $(call publish_native,$(ARCH),$(TAR_ARCH.$(ARCH))))

#----------------------------------------------------------------------------------------------


ARG TF_VERSION=2.3.1

#----------------------------------------------------------------------------------------------
FROM ubuntu:bionic

ARG TF_VERSION


RUN if [ ! -z $(command -v apt-get) ]; then apt-get -qq update; apt-get -q install -y ca-certificates wget curl git unzip; fi
RUN if [ ! -z $(command -v yum) ]; then yum install -y ca-certificates wget curl git unzip; fi

WORKDIR /build

#----------------------------------------------------------------------------------------------

RUN git clone https://github.com/RedisLabsModules/readies.git
RUN PIP=1 ./readies/bin/getpy3
RUN ./readies/bin/getbazel

#----------------------------------------------------------------------------------------------

ENV LANG=C.UTF-8

RUN ln -s $(command -v python3) /usr/local/bin/python
RUN python3 -m pip --no-cache-dir install virtualenv Pillow h5py keras_preprocessing matplotlib \
        mock 'numpy<1.19.0' future enum34

#----------------------------------------------------------------------------------------------

RUN git clone --recursive https://github.com/tensorflow/tensorflow.git

WORKDIR /build/tensorflow/
RUN git checkout v${TF_VERSION}

#----------------------------------------------------------------------------------------------

ENV TF_NEED_CUDA=0 \
    TF_NEED_TENSORRT=0 \
    \
    TF_NEED_GCP=0 \
    TF_NEED_HDFS=0 \
    TF_NEED_OPENCL=0 \
    TF_NEED_OPENCL_SYCL=0 \
    TF_NEED_JEMALLOC=1 \
    TF_ENABLE_XLA=0 \
    TF_NEED_VERBS=0 \
    TF_CUDA_CLANG=0 \
    TF_NEED_MKL=0 \
    TF_DOWNLOAD_MKL=0 \
    TF_NEED_AWS=0 \
    TF_NEED_MPI=0 \
    TF_NEED_GDR=0 \
    TF_NEED_S3=0 \
    TF_NEED_COMPUTECPP=0 \
    TF_NEED_KAFKA=0 \
    TF_SET_ANDROID_WORKSPACE=0

RUN yes "" | ./configure
RUN set -e ;\
    . /etc/profile.d/golang.sh ;\
    bazel build --jobs `/build/readies/bin/nproc` \
        --config=v2 \
        --config=opt \
        //tensorflow:libtensorflow.so

#----------------------------------------------------------------------------------------------

WORKDIR /build
ADD collect.py /build/
RUN python ./collect.py --version ${TF_VERSION} --variant cpu
